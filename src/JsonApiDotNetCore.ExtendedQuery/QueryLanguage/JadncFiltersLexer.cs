//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from JadncFilters.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace JsonApiDotNetCore.ExtendedQuery.QueryLanguage {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public partial class JadncFiltersLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		BIND_PARAMETER=1, SCOL=2, DOT=3, OPEN_PAR=4, CLOSE_PAR=5, COMMA=6, ASSIGN=7, 
		STAR=8, PLUS=9, MINUS=10, TILDE=11, PIPE2=12, DIV=13, MOD=14, LT2=15, 
		GT2=16, AMP=17, PIPE=18, LT=19, LT_EQ=20, GT=21, GT_EQ=22, EQ=23, HASH=24, 
		NOT_EQ1=25, NOT_EQ2=26, K_ADD=27, K_AND=28, K_AS=29, K_CASE=30, K_CAST=31, 
		K_DEFAULT=32, K_ELSE=33, K_END=34, K_IF=35, K_IN=36, K_IS=37, K_ISNULL=38, 
		K_LIKE=39, K_NOT=40, K_NOTNULL=41, K_NULL=42, K_OF=43, K_OR=44, K_REGEXP=45, 
		K_THEN=46, K_TO=47, K_WHEN=48, K_STRING=49, K_NUMBER=50, K_DATE=51, K_BOOLEAN=52, 
		K_TRUE=53, K_FALSE=54, K_YES=55, K_NO=56, K_HAS=57, K_TYPE=58, IDENTIFIER=59, 
		NUMERIC_LITERAL=60, BOOLEAN_LITERAL=61, STRING_LITERAL=62, DATE_LITERAL=63, 
		SPACES=64, UNEXPECTED_CHAR=65;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"BIND_PARAMETER", "SCOL", "DOT", "OPEN_PAR", "CLOSE_PAR", "COMMA", "ASSIGN", 
		"STAR", "PLUS", "MINUS", "TILDE", "PIPE2", "DIV", "MOD", "LT2", "GT2", 
		"AMP", "PIPE", "LT", "LT_EQ", "GT", "GT_EQ", "EQ", "HASH", "NOT_EQ1", 
		"NOT_EQ2", "K_ADD", "K_AND", "K_AS", "K_CASE", "K_CAST", "K_DEFAULT", 
		"K_ELSE", "K_END", "K_IF", "K_IN", "K_IS", "K_ISNULL", "K_LIKE", "K_NOT", 
		"K_NOTNULL", "K_NULL", "K_OF", "K_OR", "K_REGEXP", "K_THEN", "K_TO", "K_WHEN", 
		"K_STRING", "K_NUMBER", "K_DATE", "K_BOOLEAN", "K_TRUE", "K_FALSE", "K_YES", 
		"K_NO", "K_HAS", "K_TYPE", "IDENTIFIER", "NUMERIC_LITERAL", "BOOLEAN_LITERAL", 
		"STRING_LITERAL", "DATE_LITERAL", "SPACES", "UNEXPECTED_CHAR", "DIGIT", 
		"LETTER", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", 
		"M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
	};


	public JadncFiltersLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public JadncFiltersLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "';'", "'.'", "'('", "')'", "','", "'='", "'*'", "'+'", "'-'", 
		"'~'", "'||'", "'/'", "'%'", "'<<'", "'>>'", "'&'", "'|'", "'<'", "'<='", 
		"'>'", "'>='", "'=='", "'#'", "'!='", "'<>'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "BIND_PARAMETER", "SCOL", "DOT", "OPEN_PAR", "CLOSE_PAR", "COMMA", 
		"ASSIGN", "STAR", "PLUS", "MINUS", "TILDE", "PIPE2", "DIV", "MOD", "LT2", 
		"GT2", "AMP", "PIPE", "LT", "LT_EQ", "GT", "GT_EQ", "EQ", "HASH", "NOT_EQ1", 
		"NOT_EQ2", "K_ADD", "K_AND", "K_AS", "K_CASE", "K_CAST", "K_DEFAULT", 
		"K_ELSE", "K_END", "K_IF", "K_IN", "K_IS", "K_ISNULL", "K_LIKE", "K_NOT", 
		"K_NOTNULL", "K_NULL", "K_OF", "K_OR", "K_REGEXP", "K_THEN", "K_TO", "K_WHEN", 
		"K_STRING", "K_NUMBER", "K_DATE", "K_BOOLEAN", "K_TRUE", "K_FALSE", "K_YES", 
		"K_NO", "K_HAS", "K_TYPE", "IDENTIFIER", "NUMERIC_LITERAL", "BOOLEAN_LITERAL", 
		"STRING_LITERAL", "DATE_LITERAL", "SPACES", "UNEXPECTED_CHAR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "JadncFilters.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static JadncFiltersLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,65,560,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,1,0,1,0,4,0,190,8,0,11,0,12,0,191,1,1,1,1,1,2,1,2,1,3,1,
		3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,
		1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,17,
		1,17,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,
		1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,
		1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,
		1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,
		1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,37,
		1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,
		1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,
		1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,
		1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,48,1,48,
		1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,
		1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,
		1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,55,1,55,
		1,55,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,58,1,58,5,58,410,8,
		58,10,58,12,58,413,9,58,1,59,3,59,416,8,59,1,59,4,59,419,8,59,11,59,12,
		59,420,1,59,1,59,5,59,425,8,59,10,59,12,59,428,9,59,3,59,430,8,59,1,59,
		1,59,3,59,434,8,59,1,59,4,59,437,8,59,11,59,12,59,438,3,59,441,8,59,1,
		59,1,59,4,59,445,8,59,11,59,12,59,446,1,59,1,59,3,59,451,8,59,1,59,4,59,
		454,8,59,11,59,12,59,455,3,59,458,8,59,3,59,460,8,59,1,60,1,60,3,60,464,
		8,60,1,61,1,61,1,61,1,61,5,61,470,8,61,10,61,12,61,473,9,61,1,61,1,61,
		1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,
		1,62,1,62,1,62,1,62,3,62,495,8,62,1,62,1,62,1,63,1,63,1,63,1,63,1,64,1,
		64,1,65,1,65,1,66,1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,
		71,1,72,1,72,1,73,1,73,1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,1,78,1,
		78,1,79,1,79,1,80,1,80,1,81,1,81,1,82,1,82,1,83,1,83,1,84,1,84,1,85,1,
		85,1,86,1,86,1,87,1,87,1,88,1,88,1,89,1,89,1,90,1,90,1,91,1,91,1,92,1,
		92,0,0,93,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
		13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
		25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,
		37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,
		49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,
		119,60,121,61,123,62,125,63,127,64,129,65,131,0,133,0,135,0,137,0,139,
		0,141,0,143,0,145,0,147,0,149,0,151,0,153,0,155,0,157,0,159,0,161,0,163,
		0,165,0,167,0,169,0,171,0,173,0,175,0,177,0,179,0,181,0,183,0,185,0,1,
		0,33,5,0,46,46,48,57,65,90,95,95,97,122,3,0,65,90,95,95,97,122,4,0,48,
		57,65,90,95,95,97,122,2,0,43,43,45,45,1,0,39,39,3,0,9,11,13,13,32,32,1,
		0,48,57,2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,
		100,2,0,69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,
		104,2,0,73,73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,
		108,2,0,77,77,109,109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,
		112,2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,116,
		116,2,0,85,85,117,117,2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,
		120,2,0,89,89,121,121,2,0,90,90,122,122,549,0,1,1,0,0,0,0,3,1,0,0,0,0,
		5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,
		0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
		1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
		0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
		1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,
		0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,
		1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,
		0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,
		1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,
		0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,
		0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,
		0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,1,187,1,0,0,0,3,193,1,0,
		0,0,5,195,1,0,0,0,7,197,1,0,0,0,9,199,1,0,0,0,11,201,1,0,0,0,13,203,1,
		0,0,0,15,205,1,0,0,0,17,207,1,0,0,0,19,209,1,0,0,0,21,211,1,0,0,0,23,213,
		1,0,0,0,25,216,1,0,0,0,27,218,1,0,0,0,29,220,1,0,0,0,31,223,1,0,0,0,33,
		226,1,0,0,0,35,228,1,0,0,0,37,230,1,0,0,0,39,232,1,0,0,0,41,235,1,0,0,
		0,43,237,1,0,0,0,45,240,1,0,0,0,47,243,1,0,0,0,49,245,1,0,0,0,51,248,1,
		0,0,0,53,251,1,0,0,0,55,255,1,0,0,0,57,259,1,0,0,0,59,262,1,0,0,0,61,267,
		1,0,0,0,63,272,1,0,0,0,65,280,1,0,0,0,67,285,1,0,0,0,69,289,1,0,0,0,71,
		292,1,0,0,0,73,295,1,0,0,0,75,298,1,0,0,0,77,305,1,0,0,0,79,310,1,0,0,
		0,81,314,1,0,0,0,83,322,1,0,0,0,85,327,1,0,0,0,87,330,1,0,0,0,89,333,1,
		0,0,0,91,340,1,0,0,0,93,345,1,0,0,0,95,348,1,0,0,0,97,353,1,0,0,0,99,360,
		1,0,0,0,101,367,1,0,0,0,103,372,1,0,0,0,105,380,1,0,0,0,107,385,1,0,0,
		0,109,391,1,0,0,0,111,395,1,0,0,0,113,398,1,0,0,0,115,402,1,0,0,0,117,
		407,1,0,0,0,119,459,1,0,0,0,121,463,1,0,0,0,123,465,1,0,0,0,125,476,1,
		0,0,0,127,498,1,0,0,0,129,502,1,0,0,0,131,504,1,0,0,0,133,506,1,0,0,0,
		135,508,1,0,0,0,137,510,1,0,0,0,139,512,1,0,0,0,141,514,1,0,0,0,143,516,
		1,0,0,0,145,518,1,0,0,0,147,520,1,0,0,0,149,522,1,0,0,0,151,524,1,0,0,
		0,153,526,1,0,0,0,155,528,1,0,0,0,157,530,1,0,0,0,159,532,1,0,0,0,161,
		534,1,0,0,0,163,536,1,0,0,0,165,538,1,0,0,0,167,540,1,0,0,0,169,542,1,
		0,0,0,171,544,1,0,0,0,173,546,1,0,0,0,175,548,1,0,0,0,177,550,1,0,0,0,
		179,552,1,0,0,0,181,554,1,0,0,0,183,556,1,0,0,0,185,558,1,0,0,0,187,189,
		5,36,0,0,188,190,7,0,0,0,189,188,1,0,0,0,190,191,1,0,0,0,191,189,1,0,0,
		0,191,192,1,0,0,0,192,2,1,0,0,0,193,194,5,59,0,0,194,4,1,0,0,0,195,196,
		5,46,0,0,196,6,1,0,0,0,197,198,5,40,0,0,198,8,1,0,0,0,199,200,5,41,0,0,
		200,10,1,0,0,0,201,202,5,44,0,0,202,12,1,0,0,0,203,204,5,61,0,0,204,14,
		1,0,0,0,205,206,5,42,0,0,206,16,1,0,0,0,207,208,5,43,0,0,208,18,1,0,0,
		0,209,210,5,45,0,0,210,20,1,0,0,0,211,212,5,126,0,0,212,22,1,0,0,0,213,
		214,5,124,0,0,214,215,5,124,0,0,215,24,1,0,0,0,216,217,5,47,0,0,217,26,
		1,0,0,0,218,219,5,37,0,0,219,28,1,0,0,0,220,221,5,60,0,0,221,222,5,60,
		0,0,222,30,1,0,0,0,223,224,5,62,0,0,224,225,5,62,0,0,225,32,1,0,0,0,226,
		227,5,38,0,0,227,34,1,0,0,0,228,229,5,124,0,0,229,36,1,0,0,0,230,231,5,
		60,0,0,231,38,1,0,0,0,232,233,5,60,0,0,233,234,5,61,0,0,234,40,1,0,0,0,
		235,236,5,62,0,0,236,42,1,0,0,0,237,238,5,62,0,0,238,239,5,61,0,0,239,
		44,1,0,0,0,240,241,5,61,0,0,241,242,5,61,0,0,242,46,1,0,0,0,243,244,5,
		35,0,0,244,48,1,0,0,0,245,246,5,33,0,0,246,247,5,61,0,0,247,50,1,0,0,0,
		248,249,5,60,0,0,249,250,5,62,0,0,250,52,1,0,0,0,251,252,3,135,67,0,252,
		253,3,141,70,0,253,254,3,141,70,0,254,54,1,0,0,0,255,256,3,135,67,0,256,
		257,3,161,80,0,257,258,3,141,70,0,258,56,1,0,0,0,259,260,3,135,67,0,260,
		261,3,171,85,0,261,58,1,0,0,0,262,263,3,139,69,0,263,264,3,135,67,0,264,
		265,3,171,85,0,265,266,3,143,71,0,266,60,1,0,0,0,267,268,3,139,69,0,268,
		269,3,135,67,0,269,270,3,171,85,0,270,271,3,173,86,0,271,62,1,0,0,0,272,
		273,3,141,70,0,273,274,3,143,71,0,274,275,3,145,72,0,275,276,3,135,67,
		0,276,277,3,175,87,0,277,278,3,157,78,0,278,279,3,173,86,0,279,64,1,0,
		0,0,280,281,3,143,71,0,281,282,3,157,78,0,282,283,3,171,85,0,283,284,3,
		143,71,0,284,66,1,0,0,0,285,286,3,143,71,0,286,287,3,161,80,0,287,288,
		3,141,70,0,288,68,1,0,0,0,289,290,3,151,75,0,290,291,3,145,72,0,291,70,
		1,0,0,0,292,293,3,151,75,0,293,294,3,161,80,0,294,72,1,0,0,0,295,296,3,
		151,75,0,296,297,3,171,85,0,297,74,1,0,0,0,298,299,3,151,75,0,299,300,
		3,171,85,0,300,301,3,161,80,0,301,302,3,175,87,0,302,303,3,157,78,0,303,
		304,3,157,78,0,304,76,1,0,0,0,305,306,3,157,78,0,306,307,3,151,75,0,307,
		308,3,155,77,0,308,309,3,143,71,0,309,78,1,0,0,0,310,311,3,161,80,0,311,
		312,3,163,81,0,312,313,3,173,86,0,313,80,1,0,0,0,314,315,3,161,80,0,315,
		316,3,163,81,0,316,317,3,173,86,0,317,318,3,161,80,0,318,319,3,175,87,
		0,319,320,3,157,78,0,320,321,3,157,78,0,321,82,1,0,0,0,322,323,3,161,80,
		0,323,324,3,175,87,0,324,325,3,157,78,0,325,326,3,157,78,0,326,84,1,0,
		0,0,327,328,3,163,81,0,328,329,3,145,72,0,329,86,1,0,0,0,330,331,3,163,
		81,0,331,332,3,169,84,0,332,88,1,0,0,0,333,334,3,169,84,0,334,335,3,143,
		71,0,335,336,3,147,73,0,336,337,3,143,71,0,337,338,3,181,90,0,338,339,
		3,165,82,0,339,90,1,0,0,0,340,341,3,173,86,0,341,342,3,149,74,0,342,343,
		3,143,71,0,343,344,3,161,80,0,344,92,1,0,0,0,345,346,3,173,86,0,346,347,
		3,163,81,0,347,94,1,0,0,0,348,349,3,179,89,0,349,350,3,149,74,0,350,351,
		3,143,71,0,351,352,3,161,80,0,352,96,1,0,0,0,353,354,3,171,85,0,354,355,
		3,173,86,0,355,356,3,169,84,0,356,357,3,151,75,0,357,358,3,161,80,0,358,
		359,3,147,73,0,359,98,1,0,0,0,360,361,3,161,80,0,361,362,3,175,87,0,362,
		363,3,159,79,0,363,364,3,137,68,0,364,365,3,143,71,0,365,366,3,169,84,
		0,366,100,1,0,0,0,367,368,3,141,70,0,368,369,3,135,67,0,369,370,3,173,
		86,0,370,371,3,143,71,0,371,102,1,0,0,0,372,373,3,137,68,0,373,374,3,163,
		81,0,374,375,3,163,81,0,375,376,3,157,78,0,376,377,3,143,71,0,377,378,
		3,135,67,0,378,379,3,161,80,0,379,104,1,0,0,0,380,381,3,173,86,0,381,382,
		3,169,84,0,382,383,3,175,87,0,383,384,3,143,71,0,384,106,1,0,0,0,385,386,
		3,145,72,0,386,387,3,135,67,0,387,388,3,157,78,0,388,389,3,171,85,0,389,
		390,3,143,71,0,390,108,1,0,0,0,391,392,3,183,91,0,392,393,3,143,71,0,393,
		394,3,171,85,0,394,110,1,0,0,0,395,396,3,161,80,0,396,397,3,163,81,0,397,
		112,1,0,0,0,398,399,3,149,74,0,399,400,3,135,67,0,400,401,3,171,85,0,401,
		114,1,0,0,0,402,403,3,173,86,0,403,404,3,183,91,0,404,405,3,165,82,0,405,
		406,3,143,71,0,406,116,1,0,0,0,407,411,7,1,0,0,408,410,7,2,0,0,409,408,
		1,0,0,0,410,413,1,0,0,0,411,409,1,0,0,0,411,412,1,0,0,0,412,118,1,0,0,
		0,413,411,1,0,0,0,414,416,3,19,9,0,415,414,1,0,0,0,415,416,1,0,0,0,416,
		418,1,0,0,0,417,419,3,131,65,0,418,417,1,0,0,0,419,420,1,0,0,0,420,418,
		1,0,0,0,420,421,1,0,0,0,421,429,1,0,0,0,422,426,5,46,0,0,423,425,3,131,
		65,0,424,423,1,0,0,0,425,428,1,0,0,0,426,424,1,0,0,0,426,427,1,0,0,0,427,
		430,1,0,0,0,428,426,1,0,0,0,429,422,1,0,0,0,429,430,1,0,0,0,430,440,1,
		0,0,0,431,433,3,143,71,0,432,434,7,3,0,0,433,432,1,0,0,0,433,434,1,0,0,
		0,434,436,1,0,0,0,435,437,3,131,65,0,436,435,1,0,0,0,437,438,1,0,0,0,438,
		436,1,0,0,0,438,439,1,0,0,0,439,441,1,0,0,0,440,431,1,0,0,0,440,441,1,
		0,0,0,441,460,1,0,0,0,442,444,5,46,0,0,443,445,3,131,65,0,444,443,1,0,
		0,0,445,446,1,0,0,0,446,444,1,0,0,0,446,447,1,0,0,0,447,457,1,0,0,0,448,
		450,3,143,71,0,449,451,7,3,0,0,450,449,1,0,0,0,450,451,1,0,0,0,451,453,
		1,0,0,0,452,454,3,131,65,0,453,452,1,0,0,0,454,455,1,0,0,0,455,453,1,0,
		0,0,455,456,1,0,0,0,456,458,1,0,0,0,457,448,1,0,0,0,457,458,1,0,0,0,458,
		460,1,0,0,0,459,415,1,0,0,0,459,442,1,0,0,0,460,120,1,0,0,0,461,464,3,
		105,52,0,462,464,3,107,53,0,463,461,1,0,0,0,463,462,1,0,0,0,464,122,1,
		0,0,0,465,471,5,39,0,0,466,470,8,4,0,0,467,468,5,39,0,0,468,470,5,39,0,
		0,469,466,1,0,0,0,469,467,1,0,0,0,470,473,1,0,0,0,471,469,1,0,0,0,471,
		472,1,0,0,0,472,474,1,0,0,0,473,471,1,0,0,0,474,475,5,39,0,0,475,124,1,
		0,0,0,476,477,3,47,23,0,477,478,3,131,65,0,478,479,3,131,65,0,479,480,
		3,131,65,0,480,481,3,131,65,0,481,482,3,19,9,0,482,483,3,131,65,0,483,
		484,3,131,65,0,484,485,3,19,9,0,485,486,3,131,65,0,486,494,3,131,65,0,
		487,488,5,32,0,0,488,489,3,131,65,0,489,490,3,131,65,0,490,491,5,58,0,
		0,491,492,3,131,65,0,492,493,3,131,65,0,493,495,1,0,0,0,494,487,1,0,0,
		0,494,495,1,0,0,0,495,496,1,0,0,0,496,497,3,47,23,0,497,126,1,0,0,0,498,
		499,7,5,0,0,499,500,1,0,0,0,500,501,6,63,0,0,501,128,1,0,0,0,502,503,9,
		0,0,0,503,130,1,0,0,0,504,505,7,6,0,0,505,132,1,0,0,0,506,507,7,1,0,0,
		507,134,1,0,0,0,508,509,7,7,0,0,509,136,1,0,0,0,510,511,7,8,0,0,511,138,
		1,0,0,0,512,513,7,9,0,0,513,140,1,0,0,0,514,515,7,10,0,0,515,142,1,0,0,
		0,516,517,7,11,0,0,517,144,1,0,0,0,518,519,7,12,0,0,519,146,1,0,0,0,520,
		521,7,13,0,0,521,148,1,0,0,0,522,523,7,14,0,0,523,150,1,0,0,0,524,525,
		7,15,0,0,525,152,1,0,0,0,526,527,7,16,0,0,527,154,1,0,0,0,528,529,7,17,
		0,0,529,156,1,0,0,0,530,531,7,18,0,0,531,158,1,0,0,0,532,533,7,19,0,0,
		533,160,1,0,0,0,534,535,7,20,0,0,535,162,1,0,0,0,536,537,7,21,0,0,537,
		164,1,0,0,0,538,539,7,22,0,0,539,166,1,0,0,0,540,541,7,23,0,0,541,168,
		1,0,0,0,542,543,7,24,0,0,543,170,1,0,0,0,544,545,7,25,0,0,545,172,1,0,
		0,0,546,547,7,26,0,0,547,174,1,0,0,0,548,549,7,27,0,0,549,176,1,0,0,0,
		550,551,7,28,0,0,551,178,1,0,0,0,552,553,7,29,0,0,553,180,1,0,0,0,554,
		555,7,30,0,0,555,182,1,0,0,0,556,557,7,31,0,0,557,184,1,0,0,0,558,559,
		7,32,0,0,559,186,1,0,0,0,19,0,191,411,415,420,426,429,433,438,440,446,
		450,455,457,459,463,469,471,494,1,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace JsonApiDotNetCore.ExtendedQuery.QueryLanguage
