//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from JadncFilters.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace JsonApiDotNetCore.ExtendedQuery.QueryLanguage {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public partial class JadncFiltersLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		SCOL=1, DOT=2, OPEN_PAR=3, CLOSE_PAR=4, COMMA=5, ASSIGN=6, STAR=7, PLUS=8, 
		MINUS=9, TILDE=10, PIPE2=11, DIV=12, MOD=13, LT2=14, GT2=15, AMP=16, PIPE=17, 
		LT=18, LT_EQ=19, GT=20, GT_EQ=21, EQ=22, HASH=23, NOT_EQ1=24, NOT_EQ2=25, 
		K_ADD=26, K_AND=27, K_AS=28, K_CASE=29, K_CAST=30, K_DEFAULT=31, K_ELSE=32, 
		K_END=33, K_IF=34, K_IN=35, K_IS=36, K_ISNULL=37, K_LIKE=38, K_NOT=39, 
		K_NOTNULL=40, K_NULL=41, K_OF=42, K_OR=43, K_REGEXP=44, K_THEN=45, K_TO=46, 
		K_WHEN=47, K_STRING=48, K_NUMBER=49, K_DATE=50, K_BOOLEAN=51, K_TRUE=52, 
		K_FALSE=53, K_YES=54, K_NO=55, K_HAS=56, K_TYPE=57, IDENTIFIER=58, IDENTIFIER_PART=59, 
		NUMERIC_LITERAL=60, STRING_LITERAL=61, DATE_LITERAL=62, SPACES=63, UNEXPECTED_CHAR=64;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"SCOL", "DOT", "OPEN_PAR", "CLOSE_PAR", "COMMA", "ASSIGN", "STAR", "PLUS", 
		"MINUS", "TILDE", "PIPE2", "DIV", "MOD", "LT2", "GT2", "AMP", "PIPE", 
		"LT", "LT_EQ", "GT", "GT_EQ", "EQ", "HASH", "NOT_EQ1", "NOT_EQ2", "K_ADD", 
		"K_AND", "K_AS", "K_CASE", "K_CAST", "K_DEFAULT", "K_ELSE", "K_END", "K_IF", 
		"K_IN", "K_IS", "K_ISNULL", "K_LIKE", "K_NOT", "K_NOTNULL", "K_NULL", 
		"K_OF", "K_OR", "K_REGEXP", "K_THEN", "K_TO", "K_WHEN", "K_STRING", "K_NUMBER", 
		"K_DATE", "K_BOOLEAN", "K_TRUE", "K_FALSE", "K_YES", "K_NO", "K_HAS", 
		"K_TYPE", "IDENTIFIER", "IDENTIFIER_PART", "NUMERIC_LITERAL", "STRING_LITERAL", 
		"DATE_LITERAL", "SPACES", "UNEXPECTED_CHAR", "DIGIT", "LETTER", "A", "B", 
		"C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", 
		"Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
	};


	public JadncFiltersLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public JadncFiltersLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'.'", "'('", "')'", "','", "'='", "'*'", "'+'", "'-'", "'~'", 
		"'||'", "'/'", "'%'", "'<<'", "'>>'", "'&'", "'|'", "'<'", "'<='", "'>'", 
		"'>='", "'=='", "'#'", "'!='", "'<>'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "SCOL", "DOT", "OPEN_PAR", "CLOSE_PAR", "COMMA", "ASSIGN", "STAR", 
		"PLUS", "MINUS", "TILDE", "PIPE2", "DIV", "MOD", "LT2", "GT2", "AMP", 
		"PIPE", "LT", "LT_EQ", "GT", "GT_EQ", "EQ", "HASH", "NOT_EQ1", "NOT_EQ2", 
		"K_ADD", "K_AND", "K_AS", "K_CASE", "K_CAST", "K_DEFAULT", "K_ELSE", "K_END", 
		"K_IF", "K_IN", "K_IS", "K_ISNULL", "K_LIKE", "K_NOT", "K_NOTNULL", "K_NULL", 
		"K_OF", "K_OR", "K_REGEXP", "K_THEN", "K_TO", "K_WHEN", "K_STRING", "K_NUMBER", 
		"K_DATE", "K_BOOLEAN", "K_TRUE", "K_FALSE", "K_YES", "K_NO", "K_HAS", 
		"K_TYPE", "IDENTIFIER", "IDENTIFIER_PART", "NUMERIC_LITERAL", "STRING_LITERAL", 
		"DATE_LITERAL", "SPACES", "UNEXPECTED_CHAR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "JadncFilters.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static JadncFiltersLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,64,555,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,
		8,1,8,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,14,1,
		14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,20,1,
		20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,25,1,
		25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,
		28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,
		31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,
		34,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,
		37,1,37,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,
		40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,
		43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,46,1,46,1,
		46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,
		48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,
		50,1,50,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,
		53,1,53,1,53,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,
		56,1,57,1,57,5,57,402,8,57,10,57,12,57,405,9,57,1,58,1,58,5,58,409,8,58,
		10,58,12,58,412,9,58,1,59,3,59,415,8,59,1,59,4,59,418,8,59,11,59,12,59,
		419,1,59,1,59,5,59,424,8,59,10,59,12,59,427,9,59,3,59,429,8,59,1,59,1,
		59,3,59,433,8,59,1,59,4,59,436,8,59,11,59,12,59,437,3,59,440,8,59,1,59,
		1,59,4,59,444,8,59,11,59,12,59,445,1,59,1,59,3,59,450,8,59,1,59,4,59,453,
		8,59,11,59,12,59,454,3,59,457,8,59,3,59,459,8,59,1,60,1,60,1,60,1,60,5,
		60,465,8,60,10,60,12,60,468,9,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,
		61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,3,61,490,
		8,61,1,61,1,61,1,62,1,62,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,
		1,66,1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,73,
		1,73,1,74,1,74,1,75,1,75,1,76,1,76,1,77,1,77,1,78,1,78,1,79,1,79,1,80,
		1,80,1,81,1,81,1,82,1,82,1,83,1,83,1,84,1,84,1,85,1,85,1,86,1,86,1,87,
		1,87,1,88,1,88,1,89,1,89,1,90,1,90,1,91,1,91,0,0,92,1,1,3,2,5,3,7,4,9,
		5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
		35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
		59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,
		83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,
		53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,
		63,127,64,129,0,131,0,133,0,135,0,137,0,139,0,141,0,143,0,145,0,147,0,
		149,0,151,0,153,0,155,0,157,0,159,0,161,0,163,0,165,0,167,0,169,0,171,
		0,173,0,175,0,177,0,179,0,181,0,183,0,1,0,32,3,0,65,90,95,95,97,122,4,
		0,48,57,65,90,95,95,97,122,2,0,43,43,45,45,1,0,39,39,3,0,9,11,13,13,32,
		32,1,0,48,57,2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,
		100,100,2,0,69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,
		104,104,2,0,73,73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,
		108,108,2,0,77,77,109,109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,
		112,112,2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,
		116,116,2,0,85,85,117,117,2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,
		120,120,2,0,89,89,121,121,2,0,90,90,122,122,543,0,1,1,0,0,0,0,3,1,0,0,
		0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
		0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
		0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
		1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
		0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
		1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
		0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
		1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,
		0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,
		103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,
		113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,
		123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,1,185,1,0,0,0,3,187,1,0,0,0,5,
		189,1,0,0,0,7,191,1,0,0,0,9,193,1,0,0,0,11,195,1,0,0,0,13,197,1,0,0,0,
		15,199,1,0,0,0,17,201,1,0,0,0,19,203,1,0,0,0,21,205,1,0,0,0,23,208,1,0,
		0,0,25,210,1,0,0,0,27,212,1,0,0,0,29,215,1,0,0,0,31,218,1,0,0,0,33,220,
		1,0,0,0,35,222,1,0,0,0,37,224,1,0,0,0,39,227,1,0,0,0,41,229,1,0,0,0,43,
		232,1,0,0,0,45,235,1,0,0,0,47,237,1,0,0,0,49,240,1,0,0,0,51,243,1,0,0,
		0,53,247,1,0,0,0,55,251,1,0,0,0,57,254,1,0,0,0,59,259,1,0,0,0,61,264,1,
		0,0,0,63,272,1,0,0,0,65,277,1,0,0,0,67,281,1,0,0,0,69,284,1,0,0,0,71,287,
		1,0,0,0,73,290,1,0,0,0,75,297,1,0,0,0,77,302,1,0,0,0,79,306,1,0,0,0,81,
		314,1,0,0,0,83,319,1,0,0,0,85,322,1,0,0,0,87,325,1,0,0,0,89,332,1,0,0,
		0,91,337,1,0,0,0,93,340,1,0,0,0,95,345,1,0,0,0,97,352,1,0,0,0,99,359,1,
		0,0,0,101,364,1,0,0,0,103,372,1,0,0,0,105,377,1,0,0,0,107,383,1,0,0,0,
		109,387,1,0,0,0,111,390,1,0,0,0,113,394,1,0,0,0,115,399,1,0,0,0,117,406,
		1,0,0,0,119,458,1,0,0,0,121,460,1,0,0,0,123,471,1,0,0,0,125,493,1,0,0,
		0,127,497,1,0,0,0,129,499,1,0,0,0,131,501,1,0,0,0,133,503,1,0,0,0,135,
		505,1,0,0,0,137,507,1,0,0,0,139,509,1,0,0,0,141,511,1,0,0,0,143,513,1,
		0,0,0,145,515,1,0,0,0,147,517,1,0,0,0,149,519,1,0,0,0,151,521,1,0,0,0,
		153,523,1,0,0,0,155,525,1,0,0,0,157,527,1,0,0,0,159,529,1,0,0,0,161,531,
		1,0,0,0,163,533,1,0,0,0,165,535,1,0,0,0,167,537,1,0,0,0,169,539,1,0,0,
		0,171,541,1,0,0,0,173,543,1,0,0,0,175,545,1,0,0,0,177,547,1,0,0,0,179,
		549,1,0,0,0,181,551,1,0,0,0,183,553,1,0,0,0,185,186,5,59,0,0,186,2,1,0,
		0,0,187,188,5,46,0,0,188,4,1,0,0,0,189,190,5,40,0,0,190,6,1,0,0,0,191,
		192,5,41,0,0,192,8,1,0,0,0,193,194,5,44,0,0,194,10,1,0,0,0,195,196,5,61,
		0,0,196,12,1,0,0,0,197,198,5,42,0,0,198,14,1,0,0,0,199,200,5,43,0,0,200,
		16,1,0,0,0,201,202,5,45,0,0,202,18,1,0,0,0,203,204,5,126,0,0,204,20,1,
		0,0,0,205,206,5,124,0,0,206,207,5,124,0,0,207,22,1,0,0,0,208,209,5,47,
		0,0,209,24,1,0,0,0,210,211,5,37,0,0,211,26,1,0,0,0,212,213,5,60,0,0,213,
		214,5,60,0,0,214,28,1,0,0,0,215,216,5,62,0,0,216,217,5,62,0,0,217,30,1,
		0,0,0,218,219,5,38,0,0,219,32,1,0,0,0,220,221,5,124,0,0,221,34,1,0,0,0,
		222,223,5,60,0,0,223,36,1,0,0,0,224,225,5,60,0,0,225,226,5,61,0,0,226,
		38,1,0,0,0,227,228,5,62,0,0,228,40,1,0,0,0,229,230,5,62,0,0,230,231,5,
		61,0,0,231,42,1,0,0,0,232,233,5,61,0,0,233,234,5,61,0,0,234,44,1,0,0,0,
		235,236,5,35,0,0,236,46,1,0,0,0,237,238,5,33,0,0,238,239,5,61,0,0,239,
		48,1,0,0,0,240,241,5,60,0,0,241,242,5,62,0,0,242,50,1,0,0,0,243,244,3,
		133,66,0,244,245,3,139,69,0,245,246,3,139,69,0,246,52,1,0,0,0,247,248,
		3,133,66,0,248,249,3,159,79,0,249,250,3,139,69,0,250,54,1,0,0,0,251,252,
		3,133,66,0,252,253,3,169,84,0,253,56,1,0,0,0,254,255,3,137,68,0,255,256,
		3,133,66,0,256,257,3,169,84,0,257,258,3,141,70,0,258,58,1,0,0,0,259,260,
		3,137,68,0,260,261,3,133,66,0,261,262,3,169,84,0,262,263,3,171,85,0,263,
		60,1,0,0,0,264,265,3,139,69,0,265,266,3,141,70,0,266,267,3,143,71,0,267,
		268,3,133,66,0,268,269,3,173,86,0,269,270,3,155,77,0,270,271,3,171,85,
		0,271,62,1,0,0,0,272,273,3,141,70,0,273,274,3,155,77,0,274,275,3,169,84,
		0,275,276,3,141,70,0,276,64,1,0,0,0,277,278,3,141,70,0,278,279,3,159,79,
		0,279,280,3,139,69,0,280,66,1,0,0,0,281,282,3,149,74,0,282,283,3,143,71,
		0,283,68,1,0,0,0,284,285,3,149,74,0,285,286,3,159,79,0,286,70,1,0,0,0,
		287,288,3,149,74,0,288,289,3,169,84,0,289,72,1,0,0,0,290,291,3,149,74,
		0,291,292,3,169,84,0,292,293,3,159,79,0,293,294,3,173,86,0,294,295,3,155,
		77,0,295,296,3,155,77,0,296,74,1,0,0,0,297,298,3,155,77,0,298,299,3,149,
		74,0,299,300,3,153,76,0,300,301,3,141,70,0,301,76,1,0,0,0,302,303,3,159,
		79,0,303,304,3,161,80,0,304,305,3,171,85,0,305,78,1,0,0,0,306,307,3,159,
		79,0,307,308,3,161,80,0,308,309,3,171,85,0,309,310,3,159,79,0,310,311,
		3,173,86,0,311,312,3,155,77,0,312,313,3,155,77,0,313,80,1,0,0,0,314,315,
		3,159,79,0,315,316,3,173,86,0,316,317,3,155,77,0,317,318,3,155,77,0,318,
		82,1,0,0,0,319,320,3,161,80,0,320,321,3,143,71,0,321,84,1,0,0,0,322,323,
		3,161,80,0,323,324,3,167,83,0,324,86,1,0,0,0,325,326,3,167,83,0,326,327,
		3,141,70,0,327,328,3,145,72,0,328,329,3,141,70,0,329,330,3,179,89,0,330,
		331,3,163,81,0,331,88,1,0,0,0,332,333,3,171,85,0,333,334,3,147,73,0,334,
		335,3,141,70,0,335,336,3,159,79,0,336,90,1,0,0,0,337,338,3,171,85,0,338,
		339,3,161,80,0,339,92,1,0,0,0,340,341,3,177,88,0,341,342,3,147,73,0,342,
		343,3,141,70,0,343,344,3,159,79,0,344,94,1,0,0,0,345,346,3,169,84,0,346,
		347,3,171,85,0,347,348,3,167,83,0,348,349,3,149,74,0,349,350,3,159,79,
		0,350,351,3,145,72,0,351,96,1,0,0,0,352,353,3,159,79,0,353,354,3,173,86,
		0,354,355,3,157,78,0,355,356,3,135,67,0,356,357,3,141,70,0,357,358,3,167,
		83,0,358,98,1,0,0,0,359,360,3,139,69,0,360,361,3,133,66,0,361,362,3,171,
		85,0,362,363,3,141,70,0,363,100,1,0,0,0,364,365,3,135,67,0,365,366,3,161,
		80,0,366,367,3,161,80,0,367,368,3,155,77,0,368,369,3,141,70,0,369,370,
		3,133,66,0,370,371,3,159,79,0,371,102,1,0,0,0,372,373,3,171,85,0,373,374,
		3,167,83,0,374,375,3,173,86,0,375,376,3,141,70,0,376,104,1,0,0,0,377,378,
		3,143,71,0,378,379,3,133,66,0,379,380,3,155,77,0,380,381,3,169,84,0,381,
		382,3,141,70,0,382,106,1,0,0,0,383,384,3,181,90,0,384,385,3,141,70,0,385,
		386,3,169,84,0,386,108,1,0,0,0,387,388,3,159,79,0,388,389,3,161,80,0,389,
		110,1,0,0,0,390,391,3,147,73,0,391,392,3,133,66,0,392,393,3,169,84,0,393,
		112,1,0,0,0,394,395,3,171,85,0,395,396,3,181,90,0,396,397,3,163,81,0,397,
		398,3,141,70,0,398,114,1,0,0,0,399,403,7,0,0,0,400,402,7,1,0,0,401,400,
		1,0,0,0,402,405,1,0,0,0,403,401,1,0,0,0,403,404,1,0,0,0,404,116,1,0,0,
		0,405,403,1,0,0,0,406,410,7,0,0,0,407,409,7,1,0,0,408,407,1,0,0,0,409,
		412,1,0,0,0,410,408,1,0,0,0,410,411,1,0,0,0,411,118,1,0,0,0,412,410,1,
		0,0,0,413,415,3,17,8,0,414,413,1,0,0,0,414,415,1,0,0,0,415,417,1,0,0,0,
		416,418,3,129,64,0,417,416,1,0,0,0,418,419,1,0,0,0,419,417,1,0,0,0,419,
		420,1,0,0,0,420,428,1,0,0,0,421,425,5,46,0,0,422,424,3,129,64,0,423,422,
		1,0,0,0,424,427,1,0,0,0,425,423,1,0,0,0,425,426,1,0,0,0,426,429,1,0,0,
		0,427,425,1,0,0,0,428,421,1,0,0,0,428,429,1,0,0,0,429,439,1,0,0,0,430,
		432,3,141,70,0,431,433,7,2,0,0,432,431,1,0,0,0,432,433,1,0,0,0,433,435,
		1,0,0,0,434,436,3,129,64,0,435,434,1,0,0,0,436,437,1,0,0,0,437,435,1,0,
		0,0,437,438,1,0,0,0,438,440,1,0,0,0,439,430,1,0,0,0,439,440,1,0,0,0,440,
		459,1,0,0,0,441,443,5,46,0,0,442,444,3,129,64,0,443,442,1,0,0,0,444,445,
		1,0,0,0,445,443,1,0,0,0,445,446,1,0,0,0,446,456,1,0,0,0,447,449,3,141,
		70,0,448,450,7,2,0,0,449,448,1,0,0,0,449,450,1,0,0,0,450,452,1,0,0,0,451,
		453,3,129,64,0,452,451,1,0,0,0,453,454,1,0,0,0,454,452,1,0,0,0,454,455,
		1,0,0,0,455,457,1,0,0,0,456,447,1,0,0,0,456,457,1,0,0,0,457,459,1,0,0,
		0,458,414,1,0,0,0,458,441,1,0,0,0,459,120,1,0,0,0,460,466,5,39,0,0,461,
		465,8,3,0,0,462,463,5,39,0,0,463,465,5,39,0,0,464,461,1,0,0,0,464,462,
		1,0,0,0,465,468,1,0,0,0,466,464,1,0,0,0,466,467,1,0,0,0,467,469,1,0,0,
		0,468,466,1,0,0,0,469,470,5,39,0,0,470,122,1,0,0,0,471,472,3,45,22,0,472,
		473,3,129,64,0,473,474,3,129,64,0,474,475,3,129,64,0,475,476,3,129,64,
		0,476,477,3,17,8,0,477,478,3,129,64,0,478,479,3,129,64,0,479,480,3,17,
		8,0,480,481,3,129,64,0,481,489,3,129,64,0,482,483,5,32,0,0,483,484,3,129,
		64,0,484,485,3,129,64,0,485,486,5,58,0,0,486,487,3,129,64,0,487,488,3,
		129,64,0,488,490,1,0,0,0,489,482,1,0,0,0,489,490,1,0,0,0,490,491,1,0,0,
		0,491,492,3,45,22,0,492,124,1,0,0,0,493,494,7,4,0,0,494,495,1,0,0,0,495,
		496,6,62,0,0,496,126,1,0,0,0,497,498,9,0,0,0,498,128,1,0,0,0,499,500,7,
		5,0,0,500,130,1,0,0,0,501,502,7,0,0,0,502,132,1,0,0,0,503,504,7,6,0,0,
		504,134,1,0,0,0,505,506,7,7,0,0,506,136,1,0,0,0,507,508,7,8,0,0,508,138,
		1,0,0,0,509,510,7,9,0,0,510,140,1,0,0,0,511,512,7,10,0,0,512,142,1,0,0,
		0,513,514,7,11,0,0,514,144,1,0,0,0,515,516,7,12,0,0,516,146,1,0,0,0,517,
		518,7,13,0,0,518,148,1,0,0,0,519,520,7,14,0,0,520,150,1,0,0,0,521,522,
		7,15,0,0,522,152,1,0,0,0,523,524,7,16,0,0,524,154,1,0,0,0,525,526,7,17,
		0,0,526,156,1,0,0,0,527,528,7,18,0,0,528,158,1,0,0,0,529,530,7,19,0,0,
		530,160,1,0,0,0,531,532,7,20,0,0,532,162,1,0,0,0,533,534,7,21,0,0,534,
		164,1,0,0,0,535,536,7,22,0,0,536,166,1,0,0,0,537,538,7,23,0,0,538,168,
		1,0,0,0,539,540,7,24,0,0,540,170,1,0,0,0,541,542,7,25,0,0,542,172,1,0,
		0,0,543,544,7,26,0,0,544,174,1,0,0,0,545,546,7,27,0,0,546,176,1,0,0,0,
		547,548,7,28,0,0,548,178,1,0,0,0,549,550,7,29,0,0,550,180,1,0,0,0,551,
		552,7,30,0,0,552,182,1,0,0,0,553,554,7,31,0,0,554,184,1,0,0,0,18,0,403,
		410,414,419,425,428,432,437,439,445,449,454,456,458,464,466,489,1,0,1,
		0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace JsonApiDotNetCore.ExtendedQuery.QueryLanguage
